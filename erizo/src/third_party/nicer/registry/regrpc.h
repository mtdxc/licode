/*
 *    
 *    Copyright (C) 2006, Network Resonance, Inc.
 *    All Rights Reserved
 *    
 *    Redistribution and use in source and binary forms, with or without
 *    modification, are permitted provided that the following conditions
 *    are met:
 *    
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. Neither the name of Network Resonance, Inc. nor the name of any
 *       contributors to this software may be used to endorse or promote 
 *       products derived from this software without specific prior written
 *       permission.
 *    
 *    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS''
 *    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 *    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 *    ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
 *    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
 *    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
 *    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 *    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
 *    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *    POSSIBILITY OF SUCH DAMAGE.
 *    
 */
/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _REGRPC_H_RPCGEN
#define _REGRPC_H_RPCGEN

#define RPCGEN_VERSION	199506

#include <rpc/rpc.h>


typedef char *nr_regd_registry;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_regd_registry(XDR *, nr_regd_registry*);
#elif __STDC__
extern  bool_t xdr_nr_regd_registry(XDR *, nr_regd_registry*);
#else /* Old Style C */
bool_t xdr_nr_regd_registry();
#endif /* Old Style C */


typedef struct {
	u_int nr_regd_data_len;
	char *nr_regd_data_val;
} nr_regd_data;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_regd_data(XDR *, nr_regd_data*);
#elif __STDC__
extern  bool_t xdr_nr_regd_data(XDR *, nr_regd_data*);
#else /* Old Style C */
bool_t xdr_nr_regd_data();
#endif /* Old Style C */


typedef char *nr_regd_string;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_regd_string(XDR *, nr_regd_string*);
#elif __STDC__
extern  bool_t xdr_nr_regd_string(XDR *, nr_regd_string*);
#else /* Old Style C */
bool_t xdr_nr_regd_string();
#endif /* Old Style C */


struct nr_regd_result_char {
	int retval;
	char out;
};
typedef struct nr_regd_result_char nr_regd_result_char;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_regd_result_char(XDR *, nr_regd_result_char*);
#elif __STDC__
extern  bool_t xdr_nr_regd_result_char(XDR *, nr_regd_result_char*);
#else /* Old Style C */
bool_t xdr_nr_regd_result_char();
#endif /* Old Style C */


struct nr_regd_result_UCHAR {
	int retval;
	u_char out;
};
typedef struct nr_regd_result_UCHAR nr_regd_result_UCHAR;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_regd_result_UCHAR(XDR *, nr_regd_result_UCHAR*);
#elif __STDC__
extern  bool_t xdr_nr_regd_result_UCHAR(XDR *, nr_regd_result_UCHAR*);
#else /* Old Style C */
bool_t xdr_nr_regd_result_UCHAR();
#endif /* Old Style C */


struct nr_regd_result_INT2 {
	int retval;
	int16_t out;
};
typedef struct nr_regd_result_INT2 nr_regd_result_INT2;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_regd_result_INT2(XDR *, nr_regd_result_INT2*);
#elif __STDC__
extern  bool_t xdr_nr_regd_result_INT2(XDR *, nr_regd_result_INT2*);
#else /* Old Style C */
bool_t xdr_nr_regd_result_INT2();
#endif /* Old Style C */


struct nr_regd_result_UINT2 {
	int retval;
	u_int16_t out;
};
typedef struct nr_regd_result_UINT2 nr_regd_result_UINT2;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_regd_result_UINT2(XDR *, nr_regd_result_UINT2*);
#elif __STDC__
extern  bool_t xdr_nr_regd_result_UINT2(XDR *, nr_regd_result_UINT2*);
#else /* Old Style C */
bool_t xdr_nr_regd_result_UINT2();
#endif /* Old Style C */


struct nr_regd_result_INT4 {
	int retval;
	int32_t out;
};
typedef struct nr_regd_result_INT4 nr_regd_result_INT4;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_regd_result_INT4(XDR *, nr_regd_result_INT4*);
#elif __STDC__
extern  bool_t xdr_nr_regd_result_INT4(XDR *, nr_regd_result_INT4*);
#else /* Old Style C */
bool_t xdr_nr_regd_result_INT4();
#endif /* Old Style C */


struct nr_regd_result_UINT4 {
	int retval;
	u_int32_t out;
};
typedef struct nr_regd_result_UINT4 nr_regd_result_UINT4;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_regd_result_UINT4(XDR *, nr_regd_result_UINT4*);
#elif __STDC__
extern  bool_t xdr_nr_regd_result_UINT4(XDR *, nr_regd_result_UINT4*);
#else /* Old Style C */
bool_t xdr_nr_regd_result_UINT4();
#endif /* Old Style C */


struct nr_regd_result_INT8 {
	int retval;
	int64_t out;
};
typedef struct nr_regd_result_INT8 nr_regd_result_INT8;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_regd_result_INT8(XDR *, nr_regd_result_INT8*);
#elif __STDC__
extern  bool_t xdr_nr_regd_result_INT8(XDR *, nr_regd_result_INT8*);
#else /* Old Style C */
bool_t xdr_nr_regd_result_INT8();
#endif /* Old Style C */


struct nr_regd_result_UINT8 {
	int retval;
	u_int64_t out;
};
typedef struct nr_regd_result_UINT8 nr_regd_result_UINT8;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_regd_result_UINT8(XDR *, nr_regd_result_UINT8*);
#elif __STDC__
extern  bool_t xdr_nr_regd_result_UINT8(XDR *, nr_regd_result_UINT8*);
#else /* Old Style C */
bool_t xdr_nr_regd_result_UINT8();
#endif /* Old Style C */


struct nr_regd_result_double {
	int retval;
	double out;
};
typedef struct nr_regd_result_double nr_regd_result_double;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_regd_result_double(XDR *, nr_regd_result_double*);
#elif __STDC__
extern  bool_t xdr_nr_regd_result_double(XDR *, nr_regd_result_double*);
#else /* Old Style C */
bool_t xdr_nr_regd_result_double();
#endif /* Old Style C */


struct nr_regd_result_bytes {
	int retval;
	struct {
		u_int out_len;
		char *out_val;
	} out;
};
typedef struct nr_regd_result_bytes nr_regd_result_bytes;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_regd_result_bytes(XDR *, nr_regd_result_bytes*);
#elif __STDC__
extern  bool_t xdr_nr_regd_result_bytes(XDR *, nr_regd_result_bytes*);
#else /* Old Style C */
bool_t xdr_nr_regd_result_bytes();
#endif /* Old Style C */


struct nr_regd_result_string {
	int retval;
	char *out;
};
typedef struct nr_regd_result_string nr_regd_result_string;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_regd_result_string(XDR *, nr_regd_result_string*);
#elif __STDC__
extern  bool_t xdr_nr_regd_result_string(XDR *, nr_regd_result_string*);
#else /* Old Style C */
bool_t xdr_nr_regd_result_string();
#endif /* Old Style C */


struct nr_regd_result_strings {
	int retval;
	struct {
		u_int out_len;
		nr_regd_string *out_val;
	} out;
};
typedef struct nr_regd_result_strings nr_regd_result_strings;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_regd_result_strings(XDR *, nr_regd_result_strings*);
#elif __STDC__
extern  bool_t xdr_nr_regd_result_strings(XDR *, nr_regd_result_strings*);
#else /* Old Style C */
bool_t xdr_nr_regd_result_strings();
#endif /* Old Style C */


struct nr_reg_set_char_1_argument {
	nr_regd_registry name;
	char data;
};
typedef struct nr_reg_set_char_1_argument nr_reg_set_char_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_reg_set_char_1_argument(XDR *, nr_reg_set_char_1_argument*);
#elif __STDC__
extern  bool_t xdr_nr_reg_set_char_1_argument(XDR *, nr_reg_set_char_1_argument*);
#else /* Old Style C */
bool_t xdr_nr_reg_set_char_1_argument();
#endif /* Old Style C */


struct nr_reg_set_uchar_1_argument {
	nr_regd_registry name;
	u_char data;
};
typedef struct nr_reg_set_uchar_1_argument nr_reg_set_uchar_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_reg_set_uchar_1_argument(XDR *, nr_reg_set_uchar_1_argument*);
#elif __STDC__
extern  bool_t xdr_nr_reg_set_uchar_1_argument(XDR *, nr_reg_set_uchar_1_argument*);
#else /* Old Style C */
bool_t xdr_nr_reg_set_uchar_1_argument();
#endif /* Old Style C */


struct nr_reg_set_int2_1_argument {
	nr_regd_registry name;
	int16_t data;
};
typedef struct nr_reg_set_int2_1_argument nr_reg_set_int2_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_reg_set_int2_1_argument(XDR *, nr_reg_set_int2_1_argument*);
#elif __STDC__
extern  bool_t xdr_nr_reg_set_int2_1_argument(XDR *, nr_reg_set_int2_1_argument*);
#else /* Old Style C */
bool_t xdr_nr_reg_set_int2_1_argument();
#endif /* Old Style C */


struct nr_reg_set_uint2_1_argument {
	nr_regd_registry name;
	u_int16_t data;
};
typedef struct nr_reg_set_uint2_1_argument nr_reg_set_uint2_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_reg_set_uint2_1_argument(XDR *, nr_reg_set_uint2_1_argument*);
#elif __STDC__
extern  bool_t xdr_nr_reg_set_uint2_1_argument(XDR *, nr_reg_set_uint2_1_argument*);
#else /* Old Style C */
bool_t xdr_nr_reg_set_uint2_1_argument();
#endif /* Old Style C */


struct nr_reg_set_int4_1_argument {
	nr_regd_registry name;
	int32_t data;
};
typedef struct nr_reg_set_int4_1_argument nr_reg_set_int4_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_reg_set_int4_1_argument(XDR *, nr_reg_set_int4_1_argument*);
#elif __STDC__
extern  bool_t xdr_nr_reg_set_int4_1_argument(XDR *, nr_reg_set_int4_1_argument*);
#else /* Old Style C */
bool_t xdr_nr_reg_set_int4_1_argument();
#endif /* Old Style C */


struct nr_reg_set_uint4_1_argument {
	nr_regd_registry name;
	u_int32_t data;
};
typedef struct nr_reg_set_uint4_1_argument nr_reg_set_uint4_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_reg_set_uint4_1_argument(XDR *, nr_reg_set_uint4_1_argument*);
#elif __STDC__
extern  bool_t xdr_nr_reg_set_uint4_1_argument(XDR *, nr_reg_set_uint4_1_argument*);
#else /* Old Style C */
bool_t xdr_nr_reg_set_uint4_1_argument();
#endif /* Old Style C */


struct nr_reg_set_int8_1_argument {
	nr_regd_registry name;
	int64_t data;
};
typedef struct nr_reg_set_int8_1_argument nr_reg_set_int8_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_reg_set_int8_1_argument(XDR *, nr_reg_set_int8_1_argument*);
#elif __STDC__
extern  bool_t xdr_nr_reg_set_int8_1_argument(XDR *, nr_reg_set_int8_1_argument*);
#else /* Old Style C */
bool_t xdr_nr_reg_set_int8_1_argument();
#endif /* Old Style C */


struct nr_reg_set_uint8_1_argument {
	nr_regd_registry name;
	u_int64_t data;
};
typedef struct nr_reg_set_uint8_1_argument nr_reg_set_uint8_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_reg_set_uint8_1_argument(XDR *, nr_reg_set_uint8_1_argument*);
#elif __STDC__
extern  bool_t xdr_nr_reg_set_uint8_1_argument(XDR *, nr_reg_set_uint8_1_argument*);
#else /* Old Style C */
bool_t xdr_nr_reg_set_uint8_1_argument();
#endif /* Old Style C */


struct nr_reg_set_double_1_argument {
	nr_regd_registry name;
	double data;
};
typedef struct nr_reg_set_double_1_argument nr_reg_set_double_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_reg_set_double_1_argument(XDR *, nr_reg_set_double_1_argument*);
#elif __STDC__
extern  bool_t xdr_nr_reg_set_double_1_argument(XDR *, nr_reg_set_double_1_argument*);
#else /* Old Style C */
bool_t xdr_nr_reg_set_double_1_argument();
#endif /* Old Style C */


struct nr_reg_set_bytes_1_argument {
	nr_regd_registry name;
	nr_regd_data data;
};
typedef struct nr_reg_set_bytes_1_argument nr_reg_set_bytes_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_reg_set_bytes_1_argument(XDR *, nr_reg_set_bytes_1_argument*);
#elif __STDC__
extern  bool_t xdr_nr_reg_set_bytes_1_argument(XDR *, nr_reg_set_bytes_1_argument*);
#else /* Old Style C */
bool_t xdr_nr_reg_set_bytes_1_argument();
#endif /* Old Style C */


struct nr_reg_set_string_1_argument {
	nr_regd_registry name;
	nr_regd_string data;
};
typedef struct nr_reg_set_string_1_argument nr_reg_set_string_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_nr_reg_set_string_1_argument(XDR *, nr_reg_set_string_1_argument*);
#elif __STDC__
extern  bool_t xdr_nr_reg_set_string_1_argument(XDR *, nr_reg_set_string_1_argument*);
#else /* Old Style C */
bool_t xdr_nr_reg_set_string_1_argument();
#endif /* Old Style C */


#define REGISTRYDPROG ((u_long)0x20000189)
#define REGISTRYDVERS ((u_long)1)

#ifdef __cplusplus
#define NR_REG_GET_CHAR ((u_long)1)
extern "C" nr_regd_result_char * nr_reg_get_char_1(nr_regd_registry , CLIENT *);
extern "C" nr_regd_result_char * nr_reg_get_char_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_UCHAR ((u_long)2)
extern "C" nr_regd_result_UCHAR * nr_reg_get_uchar_1(nr_regd_registry , CLIENT *);
extern "C" nr_regd_result_UCHAR * nr_reg_get_uchar_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_INT2 ((u_long)3)
extern "C" nr_regd_result_INT2 * nr_reg_get_int2_1(nr_regd_registry , CLIENT *);
extern "C" nr_regd_result_INT2 * nr_reg_get_int2_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_UINT2 ((u_long)4)
extern "C" nr_regd_result_UINT2 * nr_reg_get_uint2_1(nr_regd_registry , CLIENT *);
extern "C" nr_regd_result_UINT2 * nr_reg_get_uint2_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_INT4 ((u_long)5)
extern "C" nr_regd_result_INT4 * nr_reg_get_int4_1(nr_regd_registry , CLIENT *);
extern "C" nr_regd_result_INT4 * nr_reg_get_int4_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_UINT4 ((u_long)6)
extern "C" nr_regd_result_UINT4 * nr_reg_get_uint4_1(nr_regd_registry , CLIENT *);
extern "C" nr_regd_result_UINT4 * nr_reg_get_uint4_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_INT8 ((u_long)7)
extern "C" nr_regd_result_INT8 * nr_reg_get_int8_1(nr_regd_registry , CLIENT *);
extern "C" nr_regd_result_INT8 * nr_reg_get_int8_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_UINT8 ((u_long)8)
extern "C" nr_regd_result_UINT8 * nr_reg_get_uint8_1(nr_regd_registry , CLIENT *);
extern "C" nr_regd_result_UINT8 * nr_reg_get_uint8_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_DOUBLE ((u_long)9)
extern "C" nr_regd_result_double * nr_reg_get_double_1(nr_regd_registry , CLIENT *);
extern "C" nr_regd_result_double * nr_reg_get_double_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_REGISTRY ((u_long)10)
extern "C" nr_regd_result_string * nr_reg_get_registry_1(nr_regd_registry , CLIENT *);
extern "C" nr_regd_result_string * nr_reg_get_registry_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_BYTES ((u_long)11)
extern "C" nr_regd_result_bytes * nr_reg_get_bytes_1(nr_regd_registry , CLIENT *);
extern "C" nr_regd_result_bytes * nr_reg_get_bytes_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_STRING ((u_long)12)
extern "C" nr_regd_result_string * nr_reg_get_string_1(nr_regd_registry , CLIENT *);
extern "C" nr_regd_result_string * nr_reg_get_string_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_LENGTH ((u_long)13)
extern "C" nr_regd_result_UINT4 * nr_reg_get_length_1(nr_regd_registry , CLIENT *);
extern "C" nr_regd_result_UINT4 * nr_reg_get_length_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_TYPE ((u_long)14)
extern "C" nr_regd_result_string * nr_reg_get_type_1(nr_regd_registry , CLIENT *);
extern "C" nr_regd_result_string * nr_reg_get_type_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_SET_CHAR ((u_long)15)
extern "C" int * nr_reg_set_char_1(nr_regd_registry , char , CLIENT *);
extern "C" int * nr_reg_set_char_1_svc(nr_regd_registry , char , struct svc_req *);
#define NR_REG_SET_UCHAR ((u_long)16)
extern "C" int * nr_reg_set_uchar_1(nr_regd_registry , u_char , CLIENT *);
extern "C" int * nr_reg_set_uchar_1_svc(nr_regd_registry , u_char , struct svc_req *);
#define NR_REG_SET_INT2 ((u_long)17)
extern "C" int * nr_reg_set_int2_1(nr_regd_registry , int16_t , CLIENT *);
extern "C" int * nr_reg_set_int2_1_svc(nr_regd_registry , int16_t , struct svc_req *);
#define NR_REG_SET_UINT2 ((u_long)18)
extern "C" int * nr_reg_set_uint2_1(nr_regd_registry , u_int16_t , CLIENT *);
extern "C" int * nr_reg_set_uint2_1_svc(nr_regd_registry , u_int16_t , struct svc_req *);
#define NR_REG_SET_INT4 ((u_long)19)
extern "C" int * nr_reg_set_int4_1(nr_regd_registry , int32_t , CLIENT *);
extern "C" int * nr_reg_set_int4_1_svc(nr_regd_registry , int32_t , struct svc_req *);
#define NR_REG_SET_UINT4 ((u_long)20)
extern "C" int * nr_reg_set_uint4_1(nr_regd_registry , u_int32_t , CLIENT *);
extern "C" int * nr_reg_set_uint4_1_svc(nr_regd_registry , u_int32_t , struct svc_req *);
#define NR_REG_SET_INT8 ((u_long)21)
extern "C" int * nr_reg_set_int8_1(nr_regd_registry , int64_t , CLIENT *);
extern "C" int * nr_reg_set_int8_1_svc(nr_regd_registry , int64_t , struct svc_req *);
#define NR_REG_SET_UINT8 ((u_long)22)
extern "C" int * nr_reg_set_uint8_1(nr_regd_registry , u_int64_t , CLIENT *);
extern "C" int * nr_reg_set_uint8_1_svc(nr_regd_registry , u_int64_t , struct svc_req *);
#define NR_REG_SET_DOUBLE ((u_long)23)
extern "C" int * nr_reg_set_double_1(nr_regd_registry , double , CLIENT *);
extern "C" int * nr_reg_set_double_1_svc(nr_regd_registry , double , struct svc_req *);
#define NR_REG_SET_REGISTRY ((u_long)24)
extern "C" int * nr_reg_set_registry_1(nr_regd_registry , CLIENT *);
extern "C" int * nr_reg_set_registry_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_SET_BYTES ((u_long)25)
extern "C" int * nr_reg_set_bytes_1(nr_regd_registry , nr_regd_data , CLIENT *);
extern "C" int * nr_reg_set_bytes_1_svc(nr_regd_registry , nr_regd_data , struct svc_req *);
#define NR_REG_SET_STRING ((u_long)26)
extern "C" int * nr_reg_set_string_1(nr_regd_registry , nr_regd_string , CLIENT *);
extern "C" int * nr_reg_set_string_1_svc(nr_regd_registry , nr_regd_string , struct svc_req *);
#define NR_REG_DEL ((u_long)27)
extern "C" int * nr_reg_del_1(nr_regd_registry , CLIENT *);
extern "C" int * nr_reg_del_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_FIN ((u_long)28)
extern "C" int * nr_reg_fin_1(nr_regd_registry , CLIENT *);
extern "C" int * nr_reg_fin_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_CHILD_COUNT ((u_long)29)
extern "C" nr_regd_result_UINT4 * nr_reg_get_child_count_1(nr_regd_registry , CLIENT *);
extern "C" nr_regd_result_UINT4 * nr_reg_get_child_count_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_CHILDREN ((u_long)30)
extern "C" nr_regd_result_strings * nr_reg_get_children_1(nr_regd_registry , CLIENT *);
extern "C" nr_regd_result_strings * nr_reg_get_children_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_DUMP ((u_long)31)
extern "C" int * nr_reg_dump_1(CLIENT *);
extern "C" int * nr_reg_dump_1_svc(struct svc_req *);
#define NR_REG_REGISTER_FOR_CALLBACKS ((u_long)32)
extern "C" int * nr_reg_register_for_callbacks_1(int , CLIENT *);
extern "C" int * nr_reg_register_for_callbacks_1_svc(int , struct svc_req *);

#elif __STDC__
#define NR_REG_GET_CHAR ((u_long)1)
extern  nr_regd_result_char * nr_reg_get_char_1(nr_regd_registry , CLIENT *);
extern  nr_regd_result_char * nr_reg_get_char_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_UCHAR ((u_long)2)
extern  nr_regd_result_UCHAR * nr_reg_get_uchar_1(nr_regd_registry , CLIENT *);
extern  nr_regd_result_UCHAR * nr_reg_get_uchar_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_INT2 ((u_long)3)
extern  nr_regd_result_INT2 * nr_reg_get_int2_1(nr_regd_registry , CLIENT *);
extern  nr_regd_result_INT2 * nr_reg_get_int2_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_UINT2 ((u_long)4)
extern  nr_regd_result_UINT2 * nr_reg_get_uint2_1(nr_regd_registry , CLIENT *);
extern  nr_regd_result_UINT2 * nr_reg_get_uint2_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_INT4 ((u_long)5)
extern  nr_regd_result_INT4 * nr_reg_get_int4_1(nr_regd_registry , CLIENT *);
extern  nr_regd_result_INT4 * nr_reg_get_int4_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_UINT4 ((u_long)6)
extern  nr_regd_result_UINT4 * nr_reg_get_uint4_1(nr_regd_registry , CLIENT *);
extern  nr_regd_result_UINT4 * nr_reg_get_uint4_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_INT8 ((u_long)7)
extern  nr_regd_result_INT8 * nr_reg_get_int8_1(nr_regd_registry , CLIENT *);
extern  nr_regd_result_INT8 * nr_reg_get_int8_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_UINT8 ((u_long)8)
extern  nr_regd_result_UINT8 * nr_reg_get_uint8_1(nr_regd_registry , CLIENT *);
extern  nr_regd_result_UINT8 * nr_reg_get_uint8_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_DOUBLE ((u_long)9)
extern  nr_regd_result_double * nr_reg_get_double_1(nr_regd_registry , CLIENT *);
extern  nr_regd_result_double * nr_reg_get_double_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_REGISTRY ((u_long)10)
extern  nr_regd_result_string * nr_reg_get_registry_1(nr_regd_registry , CLIENT *);
extern  nr_regd_result_string * nr_reg_get_registry_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_BYTES ((u_long)11)
extern  nr_regd_result_bytes * nr_reg_get_bytes_1(nr_regd_registry , CLIENT *);
extern  nr_regd_result_bytes * nr_reg_get_bytes_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_STRING ((u_long)12)
extern  nr_regd_result_string * nr_reg_get_string_1(nr_regd_registry , CLIENT *);
extern  nr_regd_result_string * nr_reg_get_string_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_LENGTH ((u_long)13)
extern  nr_regd_result_UINT4 * nr_reg_get_length_1(nr_regd_registry , CLIENT *);
extern  nr_regd_result_UINT4 * nr_reg_get_length_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_TYPE ((u_long)14)
extern  nr_regd_result_string * nr_reg_get_type_1(nr_regd_registry , CLIENT *);
extern  nr_regd_result_string * nr_reg_get_type_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_SET_CHAR ((u_long)15)
extern  int * nr_reg_set_char_1(nr_regd_registry , char , CLIENT *);
extern  int * nr_reg_set_char_1_svc(nr_regd_registry , char , struct svc_req *);
#define NR_REG_SET_UCHAR ((u_long)16)
extern  int * nr_reg_set_uchar_1(nr_regd_registry , u_char , CLIENT *);
extern  int * nr_reg_set_uchar_1_svc(nr_regd_registry , u_char , struct svc_req *);
#define NR_REG_SET_INT2 ((u_long)17)
extern  int * nr_reg_set_int2_1(nr_regd_registry , int16_t , CLIENT *);
extern  int * nr_reg_set_int2_1_svc(nr_regd_registry , int16_t , struct svc_req *);
#define NR_REG_SET_UINT2 ((u_long)18)
extern  int * nr_reg_set_uint2_1(nr_regd_registry , u_int16_t , CLIENT *);
extern  int * nr_reg_set_uint2_1_svc(nr_regd_registry , u_int16_t , struct svc_req *);
#define NR_REG_SET_INT4 ((u_long)19)
extern  int * nr_reg_set_int4_1(nr_regd_registry , int32_t , CLIENT *);
extern  int * nr_reg_set_int4_1_svc(nr_regd_registry , int32_t , struct svc_req *);
#define NR_REG_SET_UINT4 ((u_long)20)
extern  int * nr_reg_set_uint4_1(nr_regd_registry , u_int32_t , CLIENT *);
extern  int * nr_reg_set_uint4_1_svc(nr_regd_registry , u_int32_t , struct svc_req *);
#define NR_REG_SET_INT8 ((u_long)21)
extern  int * nr_reg_set_int8_1(nr_regd_registry , int64_t , CLIENT *);
extern  int * nr_reg_set_int8_1_svc(nr_regd_registry , int64_t , struct svc_req *);
#define NR_REG_SET_UINT8 ((u_long)22)
extern  int * nr_reg_set_uint8_1(nr_regd_registry , u_int64_t , CLIENT *);
extern  int * nr_reg_set_uint8_1_svc(nr_regd_registry , u_int64_t , struct svc_req *);
#define NR_REG_SET_DOUBLE ((u_long)23)
extern  int * nr_reg_set_double_1(nr_regd_registry , double , CLIENT *);
extern  int * nr_reg_set_double_1_svc(nr_regd_registry , double , struct svc_req *);
#define NR_REG_SET_REGISTRY ((u_long)24)
extern  int * nr_reg_set_registry_1(nr_regd_registry , CLIENT *);
extern  int * nr_reg_set_registry_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_SET_BYTES ((u_long)25)
extern  int * nr_reg_set_bytes_1(nr_regd_registry , nr_regd_data , CLIENT *);
extern  int * nr_reg_set_bytes_1_svc(nr_regd_registry , nr_regd_data , struct svc_req *);
#define NR_REG_SET_STRING ((u_long)26)
extern  int * nr_reg_set_string_1(nr_regd_registry , nr_regd_string , CLIENT *);
extern  int * nr_reg_set_string_1_svc(nr_regd_registry , nr_regd_string , struct svc_req *);
#define NR_REG_DEL ((u_long)27)
extern  int * nr_reg_del_1(nr_regd_registry , CLIENT *);
extern  int * nr_reg_del_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_FIN ((u_long)28)
extern  int * nr_reg_fin_1(nr_regd_registry , CLIENT *);
extern  int * nr_reg_fin_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_CHILD_COUNT ((u_long)29)
extern  nr_regd_result_UINT4 * nr_reg_get_child_count_1(nr_regd_registry , CLIENT *);
extern  nr_regd_result_UINT4 * nr_reg_get_child_count_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_GET_CHILDREN ((u_long)30)
extern  nr_regd_result_strings * nr_reg_get_children_1(nr_regd_registry , CLIENT *);
extern  nr_regd_result_strings * nr_reg_get_children_1_svc(nr_regd_registry , struct svc_req *);
#define NR_REG_DUMP ((u_long)31)
extern  int * nr_reg_dump_1(CLIENT *);
extern  int * nr_reg_dump_1_svc(struct svc_req *);
#define NR_REG_REGISTER_FOR_CALLBACKS ((u_long)32)
extern  int * nr_reg_register_for_callbacks_1(int , CLIENT *);
extern  int * nr_reg_register_for_callbacks_1_svc(int , struct svc_req *);

#else /* Old Style C */
#define NR_REG_GET_CHAR ((u_long)1)
extern  nr_regd_result_char * nr_reg_get_char_1();
extern  nr_regd_result_char * nr_reg_get_char_1_svc();
#define NR_REG_GET_UCHAR ((u_long)2)
extern  nr_regd_result_UCHAR * nr_reg_get_uchar_1();
extern  nr_regd_result_UCHAR * nr_reg_get_uchar_1_svc();
#define NR_REG_GET_INT2 ((u_long)3)
extern  nr_regd_result_INT2 * nr_reg_get_int2_1();
extern  nr_regd_result_INT2 * nr_reg_get_int2_1_svc();
#define NR_REG_GET_UINT2 ((u_long)4)
extern  nr_regd_result_UINT2 * nr_reg_get_uint2_1();
extern  nr_regd_result_UINT2 * nr_reg_get_uint2_1_svc();
#define NR_REG_GET_INT4 ((u_long)5)
extern  nr_regd_result_INT4 * nr_reg_get_int4_1();
extern  nr_regd_result_INT4 * nr_reg_get_int4_1_svc();
#define NR_REG_GET_UINT4 ((u_long)6)
extern  nr_regd_result_UINT4 * nr_reg_get_uint4_1();
extern  nr_regd_result_UINT4 * nr_reg_get_uint4_1_svc();
#define NR_REG_GET_INT8 ((u_long)7)
extern  nr_regd_result_INT8 * nr_reg_get_int8_1();
extern  nr_regd_result_INT8 * nr_reg_get_int8_1_svc();
#define NR_REG_GET_UINT8 ((u_long)8)
extern  nr_regd_result_UINT8 * nr_reg_get_uint8_1();
extern  nr_regd_result_UINT8 * nr_reg_get_uint8_1_svc();
#define NR_REG_GET_DOUBLE ((u_long)9)
extern  nr_regd_result_double * nr_reg_get_double_1();
extern  nr_regd_result_double * nr_reg_get_double_1_svc();
#define NR_REG_GET_REGISTRY ((u_long)10)
extern  nr_regd_result_string * nr_reg_get_registry_1();
extern  nr_regd_result_string * nr_reg_get_registry_1_svc();
#define NR_REG_GET_BYTES ((u_long)11)
extern  nr_regd_result_bytes * nr_reg_get_bytes_1();
extern  nr_regd_result_bytes * nr_reg_get_bytes_1_svc();
#define NR_REG_GET_STRING ((u_long)12)
extern  nr_regd_result_string * nr_reg_get_string_1();
extern  nr_regd_result_string * nr_reg_get_string_1_svc();
#define NR_REG_GET_LENGTH ((u_long)13)
extern  nr_regd_result_UINT4 * nr_reg_get_length_1();
extern  nr_regd_result_UINT4 * nr_reg_get_length_1_svc();
#define NR_REG_GET_TYPE ((u_long)14)
extern  nr_regd_result_string * nr_reg_get_type_1();
extern  nr_regd_result_string * nr_reg_get_type_1_svc();
#define NR_REG_SET_CHAR ((u_long)15)
extern  int * nr_reg_set_char_1();
extern  int * nr_reg_set_char_1_svc();
#define NR_REG_SET_UCHAR ((u_long)16)
extern  int * nr_reg_set_uchar_1();
extern  int * nr_reg_set_uchar_1_svc();
#define NR_REG_SET_INT2 ((u_long)17)
extern  int * nr_reg_set_int2_1();
extern  int * nr_reg_set_int2_1_svc();
#define NR_REG_SET_UINT2 ((u_long)18)
extern  int * nr_reg_set_uint2_1();
extern  int * nr_reg_set_uint2_1_svc();
#define NR_REG_SET_INT4 ((u_long)19)
extern  int * nr_reg_set_int4_1();
extern  int * nr_reg_set_int4_1_svc();
#define NR_REG_SET_UINT4 ((u_long)20)
extern  int * nr_reg_set_uint4_1();
extern  int * nr_reg_set_uint4_1_svc();
#define NR_REG_SET_INT8 ((u_long)21)
extern  int * nr_reg_set_int8_1();
extern  int * nr_reg_set_int8_1_svc();
#define NR_REG_SET_UINT8 ((u_long)22)
extern  int * nr_reg_set_uint8_1();
extern  int * nr_reg_set_uint8_1_svc();
#define NR_REG_SET_DOUBLE ((u_long)23)
extern  int * nr_reg_set_double_1();
extern  int * nr_reg_set_double_1_svc();
#define NR_REG_SET_REGISTRY ((u_long)24)
extern  int * nr_reg_set_registry_1();
extern  int * nr_reg_set_registry_1_svc();
#define NR_REG_SET_BYTES ((u_long)25)
extern  int * nr_reg_set_bytes_1();
extern  int * nr_reg_set_bytes_1_svc();
#define NR_REG_SET_STRING ((u_long)26)
extern  int * nr_reg_set_string_1();
extern  int * nr_reg_set_string_1_svc();
#define NR_REG_DEL ((u_long)27)
extern  int * nr_reg_del_1();
extern  int * nr_reg_del_1_svc();
#define NR_REG_FIN ((u_long)28)
extern  int * nr_reg_fin_1();
extern  int * nr_reg_fin_1_svc();
#define NR_REG_GET_CHILD_COUNT ((u_long)29)
extern  nr_regd_result_UINT4 * nr_reg_get_child_count_1();
extern  nr_regd_result_UINT4 * nr_reg_get_child_count_1_svc();
#define NR_REG_GET_CHILDREN ((u_long)30)
extern  nr_regd_result_strings * nr_reg_get_children_1();
extern  nr_regd_result_strings * nr_reg_get_children_1_svc();
#define NR_REG_DUMP ((u_long)31)
extern  int * nr_reg_dump_1();
extern  int * nr_reg_dump_1_svc();
#define NR_REG_REGISTER_FOR_CALLBACKS ((u_long)32)
extern  int * nr_reg_register_for_callbacks_1();
extern  int * nr_reg_register_for_callbacks_1_svc();
#endif /* Old Style C */

#endif /* !_REGRPC_H_RPCGEN */
